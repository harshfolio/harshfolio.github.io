#!/usr/bin/env bash
set -euo pipefail

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"
INDEX_FILE="$ROOT_DIR/content/_index.md"
README_FILE="$ROOT_DIR/README.md"
HUGO_CONF="$ROOT_DIR/hugo.toml"

if [[ ! -f "$INDEX_FILE" ]]; then
  echo "Missing $INDEX_FILE" >&2
  exit 1
fi

# Extract site baseURL and title from hugo.toml (single-quoted values)
baseURL=$(sed -n "s/^baseURL[[:space:]]*=[[:space:]]*'\(.*\)'/\1/p" "$HUGO_CONF" | head -n1)
siteTitle=$(sed -n "s/^title[[:space:]]*=[[:space:]]*'\(.*\)'/\1/p" "$HUGO_CONF" | head -n1)

# Fallbacks
baseURL=${baseURL:-""}
siteTitle=${siteTitle:-"Portfolio"}

# Extract front matter title from index (if present)
indexTitle=$(awk 'BEGIN{inyaml=0;c=0} /^---[[:space:]]*$/ {c++; if(c==1){inyaml=1; next} if(c==2){inyaml=0; exit}} inyaml && /^title:/ {sub(/^title:[[:space:]]*"?/ , ""); sub(/"[[:space:]]*$/, ""); print; exit}' "$INDEX_FILE" 2>/dev/null || true)
[[ -n "$indexTitle" ]] && siteTitle="$indexTitle"

# Strip YAML front matter
indexBody=$(awk 'BEGIN{yaml=0} /^---[[:space:]]*$/ {yaml++; next} yaml<2{next} {print}' "$INDEX_FILE")

# Transform image paths for GitHub rendering
indexBody=$(printf "%s" "$indexBody" | sed -E 's/src="\/images\//src="static\/images\//g')

# Transform root-relative markdown links to absolute links using baseURL (if set)
if [[ -n "$baseURL" ]]; then
  indexBody=$(printf "%s" "$indexBody" | sed -E "s|\]\(/|\](${baseURL%/}/|g")
fi

# Build posts list (title, description) and link to deployed site if baseURL present
posts_section=""
shopt -s nullglob
for f in "$ROOT_DIR"/content/posts/*.md; do
  title=$(awk 'BEGIN{inyaml=0;c=0} /^---[[:space:]]*$/ {c++; if(c==1){inyaml=1; next} if(c==2){inyaml=0; exit}} inyaml && /^title:/ {sub(/^title:[[:space:]]*"?/ , ""); sub(/"[[:space:]]*$/, ""); print; exit}' "$f")
  desc=$(awk 'BEGIN{inyaml=0;c=0} /^---[[:space:]]*$/ {c++; if(c==1){inyaml=1; next} if(c==2){inyaml=0; exit}} inyaml && /^description:/ {sub(/^description:[[:space:]]*"?/ , ""); sub(/"[[:space:]]*$/, ""); print; exit}' "$f")
  draft=$(awk 'BEGIN{inyaml=0;c=0} /^---[[:space:]]*$/ {c++; if(c==1){inyaml=1; next} if(c==2){inyaml=0; exit}} inyaml && /^draft:/ {sub(/^draft:[[:space:]]*/ , ""); print; exit}' "$f")
  [[ "$draft" == "true" ]] && continue
  slug=$(basename "$f" .md)
  if [[ -n "$baseURL" ]]; then
    url="${baseURL%/}/posts/${slug}/"
  else
    url="content/posts/${slug}.md"
  fi
  line="- [${title}](${url})"
  [[ -n "$desc" ]] && line+=" â€” ${desc}"
  posts_section+="$line
"
done
shopt -u nullglob

# Assemble README
{
  echo "<!-- This file is generated by .bin/sync-readme from content/_index.md. Do not edit by hand. -->"
  echo "# ${siteTitle}"
  echo
  printf "%s\n" "$indexBody"
  if [[ -n "$posts_section" ]]; then
    echo
    echo "## Writing"
    echo
    printf "%s" "$posts_section"
  fi
  echo
  echo "---"
  echo "To regenerate: run .bin/sync-readme"
} > "$README_FILE"

echo "README generated from content/_index.md"
